{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Azureblb_crickinfo_test_DS",
						"type": "DatasetReference"
					},
					"name": "SourceCSVCrickinfo"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Azureblb_crickinfo_test_DS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Player as string,",
				"          Span as date 'yyyy-yyyy',",
				"          Mat as short,",
				"          Inns as short,",
				"          NO as short,",
				"          Runs as short,",
				"          HS as short,",
				"          Ave as double,",
				"          {100} as short,",
				"          {50} as short,",
				"          {0} as short,",
				"          Column1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCSVCrickinfo",
				"SourceCSVCrickinfo aggregate(groupBy(Player),",
				"     Total_Runs = sum(Runs),",
				"          {Toal Number of Matches} = sum(Mat),",
				"          {Total Avergae} = sum(Runs)/sum(Mat)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Player as string,",
				"          Span as string,",
				"          Mat as string,",
				"          Inns as string,",
				"          NO as string,",
				"          Runs as string,",
				"          HS as string,",
				"          Ave as string,",
				"          {100} as string,",
				"          {50} as string,",
				"          {0} as string,",
				"          Column1 as string",
				"     ),",
				"     partitionFileNames:['CrickInfo_Players_runs.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}